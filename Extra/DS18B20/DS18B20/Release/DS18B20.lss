
DS18B20.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000005a  00800100  00000194  00000208  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000194  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000262  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000294  2**2
                  CONTENTS, READONLY
  4 .debug_info   000005f4  00000000  00000000  000002d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000005a2  00000000  00000000  000008c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000134  00000000  00000000  00000e6a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000208  00000000  00000000  00000f9e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e9       	ldi	r30, 0x94	; 148
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 35       	cpi	r26, 0x5A	; 90
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa e5       	ldi	r26, 0x5A	; 90
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 35       	cpi	r26, 0x5A	; 90
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  9e:	0c 94 c8 00 	jmp	0x190	; 0x190 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
  a6:	0e 94 a4 00 	call	0x148	; 0x148 <UART_init>
  aa:	25 e3       	ldi	r18, 0x35	; 53
  ac:	2a 95       	dec	r18
  ae:	f1 f7       	brne	.-4      	; 0xac <main+0x6>
  b0:	00 00       	nop
  b2:	c4 e0       	ldi	r28, 0x04	; 4
  b4:	d0 e2       	ldi	r29, 0x20	; 32
  b6:	80 e0       	ldi	r24, 0x00	; 0
  b8:	91 e0       	ldi	r25, 0x01	; 1
  ba:	0e 94 bc 00 	call	0x178	; 0x178 <UART_write_txt>
  be:	8a e0       	ldi	r24, 0x0A	; 10
  c0:	0e 94 b5 00 	call	0x16a	; 0x16a <UART_write>
  c4:	89 e0       	ldi	r24, 0x09	; 9
  c6:	91 e0       	ldi	r25, 0x01	; 1
  c8:	0e 94 bc 00 	call	0x178	; 0x178 <UART_write_txt>
  cc:	8a e0       	ldi	r24, 0x0A	; 10
  ce:	0e 94 b5 00 	call	0x16a	; 0x16a <UART_write>
  d2:	1b b8       	out	0x0b, r1	; 11
  d4:	86 e1       	ldi	r24, 0x16	; 22
  d6:	91 e0       	ldi	r25, 0x01	; 1
  d8:	0e 94 bc 00 	call	0x178	; 0x178 <UART_write_txt>
  dc:	8a e0       	ldi	r24, 0x0A	; 10
  de:	0e 94 b5 00 	call	0x16a	; 0x16a <UART_write>
  e2:	ca b9       	out	0x0a, r28	; 10
  e4:	cb b9       	out	0x0b, r28	; 11
  e6:	8f e7       	ldi	r24, 0x7F	; 127
  e8:	97 e0       	ldi	r25, 0x07	; 7
  ea:	01 97       	sbiw	r24, 0x01	; 1
  ec:	f1 f7       	brne	.-4      	; 0xea <main+0x44>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <main+0x4a>
  f0:	00 00       	nop
  f2:	1b b8       	out	0x0b, r1	; 11
  f4:	87 e1       	ldi	r24, 0x17	; 23
  f6:	91 e0       	ldi	r25, 0x01	; 1
  f8:	01 97       	sbiw	r24, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <main+0x52>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <main+0x58>
  fe:	00 00       	nop
 100:	1a b8       	out	0x0a, r1	; 10
 102:	89 b1       	in	r24, 0x09	; 9
 104:	87 e6       	ldi	r24, 0x67	; 103
 106:	96 e0       	ldi	r25, 0x06	; 6
 108:	01 97       	sbiw	r24, 0x01	; 1
 10a:	f1 f7       	brne	.-4      	; 0x108 <main+0x62>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <main+0x68>
 10e:	00 00       	nop
 110:	4a 99       	sbic	0x09, 2	; 9
 112:	05 c0       	rjmp	.+10     	; 0x11e <main+0x78>
 114:	d4 b9       	out	0x04, r29	; 4
 116:	d5 b9       	out	0x05, r29	; 5
 118:	88 e3       	ldi	r24, 0x38	; 56
 11a:	91 e0       	ldi	r25, 0x01	; 1
 11c:	04 c0       	rjmp	.+8      	; 0x126 <main+0x80>
 11e:	15 b8       	out	0x05, r1	; 5
 120:	14 b8       	out	0x04, r1	; 4
 122:	87 e4       	ldi	r24, 0x47	; 71
 124:	91 e0       	ldi	r25, 0x01	; 1
 126:	0e 94 bc 00 	call	0x178	; 0x178 <UART_write_txt>
 12a:	8a e0       	ldi	r24, 0x0A	; 10
 12c:	0e 94 b5 00 	call	0x16a	; 0x16a <UART_write>
 130:	15 b8       	out	0x05, r1	; 5
 132:	14 b8       	out	0x04, r1	; 4
 134:	9f ef       	ldi	r25, 0xFF	; 255
 136:	21 ee       	ldi	r18, 0xE1	; 225
 138:	84 e0       	ldi	r24, 0x04	; 4
 13a:	91 50       	subi	r25, 0x01	; 1
 13c:	20 40       	sbci	r18, 0x00	; 0
 13e:	80 40       	sbci	r24, 0x00	; 0
 140:	e1 f7       	brne	.-8      	; 0x13a <main+0x94>
 142:	00 c0       	rjmp	.+0      	; 0x144 <main+0x9e>
 144:	00 00       	nop
 146:	b7 cf       	rjmp	.-146    	; 0xb6 <main+0x10>

00000148 <UART_init>:
 148:	51 9a       	sbi	0x0a, 1	; 10
 14a:	50 98       	cbi	0x0a, 0	; 10
 14c:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 150:	88 e9       	ldi	r24, 0x98	; 152
 152:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 156:	86 e0       	ldi	r24, 0x06	; 6
 158:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 15c:	87 e6       	ldi	r24, 0x67	; 103
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 164:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 168:	08 95       	ret

0000016a <UART_write>:
 16a:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 16e:	95 ff       	sbrs	r25, 5
 170:	fc cf       	rjmp	.-8      	; 0x16a <UART_write>
 172:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 176:	08 95       	ret

00000178 <UART_write_txt>:
 178:	cf 93       	push	r28
 17a:	df 93       	push	r29
 17c:	ec 01       	movw	r28, r24
 17e:	89 91       	ld	r24, Y+
 180:	88 23       	and	r24, r24
 182:	19 f0       	breq	.+6      	; 0x18a <UART_write_txt+0x12>
 184:	0e 94 b5 00 	call	0x16a	; 0x16a <UART_write>
 188:	fa cf       	rjmp	.-12     	; 0x17e <UART_write_txt+0x6>
 18a:	df 91       	pop	r29
 18c:	cf 91       	pop	r28
 18e:	08 95       	ret

00000190 <_exit>:
 190:	f8 94       	cli

00000192 <__stop_program>:
 192:	ff cf       	rjmp	.-2      	; 0x192 <__stop_program>
