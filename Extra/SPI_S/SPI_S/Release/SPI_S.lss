
SPI_S.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
<<<<<<< HEAD
  0 .data         0000002e  00800100  0000020e  000002a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000020e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  0080012e  0080012e  000002d0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002d0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000300  2**2
                  CONTENTS, READONLY
  5 .debug_info   000005f4  00000000  00000000  00000340  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005a2  00000000  00000000  00000934  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000134  00000000  00000000  00000ed6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000208  00000000  00000000  0000100a  2**0
=======
  0 .data         00000000  00800100  00800100  000001b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000142  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  000001b6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001b6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001e8  2**2
                  CONTENTS, READONLY
  5 .debug_info   000005f4  00000000  00000000  00000228  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005a2  00000000  00000000  0000081c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000134  00000000  00000000  00000dbe  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000208  00000000  00000000  00000ef2  2**0
>>>>>>> a480e008b884e89538d8bf8699e927791b75daf3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
<<<<<<< HEAD
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 6f 00 	jmp	0xde	; 0xde <__vector_17>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
=======
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 6d 00 	jmp	0xda	; 0xda <__vector_17>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
>>>>>>> a480e008b884e89538d8bf8699e927791b75daf3

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
<<<<<<< HEAD
  7a:	ee e0       	ldi	r30, 0x0E	; 14
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 32       	cpi	r26, 0x2E	; 46
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ae e2       	ldi	r26, 0x2E	; 46
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a1 33       	cpi	r26, 0x31	; 49
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 9f 00 	call	0x13e	; 0x13e <main>
  9e:	0c 94 05 01 	jmp	0x20a	; 0x20a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <SPI_init>:
  a6:	23 98       	cbi	0x04, 3	; 4
  a8:	24 9a       	sbi	0x04, 4	; 4
  aa:	22 98       	cbi	0x04, 2	; 4
  ac:	2a 9a       	sbi	0x05, 2	; 5
  ae:	8c b5       	in	r24, 0x2c	; 44
  b0:	8f 7d       	andi	r24, 0xDF	; 223
  b2:	8c bd       	out	0x2c, r24	; 44
  b4:	8c b5       	in	r24, 0x2c	; 44
  b6:	87 7f       	andi	r24, 0xF7	; 247
  b8:	8c bd       	out	0x2c, r24	; 44
  ba:	8c b5       	in	r24, 0x2c	; 44
  bc:	8b 7f       	andi	r24, 0xFB	; 251
  be:	8c bd       	out	0x2c, r24	; 44
  c0:	8c b5       	in	r24, 0x2c	; 44
  c2:	8f 7e       	andi	r24, 0xEF	; 239
  c4:	8c bd       	out	0x2c, r24	; 44
  c6:	8c b5       	in	r24, 0x2c	; 44
  c8:	80 64       	ori	r24, 0x40	; 64
  ca:	8c bd       	out	0x2c, r24	; 44
  cc:	8c b5       	in	r24, 0x2c	; 44
  ce:	80 68       	ori	r24, 0x80	; 128
  d0:	8c bd       	out	0x2c, r24	; 44
  d2:	08 95       	ret

000000d4 <SPI_tx>:
  d4:	8e bd       	out	0x2e, r24	; 46
  d6:	0d b4       	in	r0, 0x2d	; 45
  d8:	07 fe       	sbrs	r0, 7
  da:	fd cf       	rjmp	.-6      	; 0xd6 <SPI_tx+0x2>
  dc:	08 95       	ret

000000de <__vector_17>:
  de:	1f 92       	push	r1
  e0:	0f 92       	push	r0
  e2:	0f b6       	in	r0, 0x3f	; 63
  e4:	0f 92       	push	r0
  e6:	11 24       	eor	r1, r1
  e8:	2f 93       	push	r18
  ea:	3f 93       	push	r19
  ec:	4f 93       	push	r20
  ee:	5f 93       	push	r21
  f0:	6f 93       	push	r22
  f2:	7f 93       	push	r23
  f4:	8f 93       	push	r24
  f6:	9f 93       	push	r25
  f8:	af 93       	push	r26
  fa:	bf 93       	push	r27
  fc:	ef 93       	push	r30
  fe:	ff 93       	push	r31
 100:	8e b5       	in	r24, 0x2e	; 46
 102:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <SPI_Rx>
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <__data_end>
 10c:	80 e0       	ldi	r24, 0x00	; 0
 10e:	91 e0       	ldi	r25, 0x01	; 1
 110:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <UART_write_txt>
 114:	8a e0       	ldi	r24, 0x0A	; 10
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <UART_write>
 11c:	ff 91       	pop	r31
 11e:	ef 91       	pop	r30
 120:	bf 91       	pop	r27
 122:	af 91       	pop	r26
 124:	9f 91       	pop	r25
 126:	8f 91       	pop	r24
 128:	7f 91       	pop	r23
 12a:	6f 91       	pop	r22
 12c:	5f 91       	pop	r21
 12e:	4f 91       	pop	r20
 130:	3f 91       	pop	r19
 132:	2f 91       	pop	r18
 134:	0f 90       	pop	r0
 136:	0f be       	out	0x3f, r0	; 63
 138:	0f 90       	pop	r0
 13a:	1f 90       	pop	r1
 13c:	18 95       	reti

0000013e <main>:
 13e:	f8 94       	cli
 140:	0e 94 53 00 	call	0xa6	; 0xa6 <SPI_init>
 144:	78 94       	sei
 146:	8f e3       	ldi	r24, 0x3F	; 63
 148:	9c e9       	ldi	r25, 0x9C	; 156
 14a:	01 97       	sbiw	r24, 0x01	; 1
 14c:	f1 f7       	brne	.-4      	; 0x14a <main+0xc>
 14e:	00 c0       	rjmp	.+0      	; 0x150 <main+0x12>
 150:	00 00       	nop
 152:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <__data_end>
 156:	81 30       	cpi	r24, 0x01	; 1
 158:	f1 f7       	brne	.-4      	; 0x156 <main+0x18>
 15a:	8b e0       	ldi	r24, 0x0B	; 11
 15c:	91 e0       	ldi	r25, 0x01	; 1
 15e:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <UART_write_txt>
 162:	8a e0       	ldi	r24, 0x0A	; 10
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <UART_write>
 16a:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <SPI_Rx>
 16e:	81 30       	cpi	r24, 0x01	; 1
 170:	89 f5       	brne	.+98     	; 0x1d4 <main+0x96>
 172:	88 e1       	ldi	r24, 0x18	; 24
 174:	91 e0       	ldi	r25, 0x01	; 1
 176:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <UART_write_txt>
 17a:	8a e0       	ldi	r24, 0x0A	; 10
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <UART_write>
 182:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <cont>
 186:	81 11       	cpse	r24, r1
 188:	0e c0       	rjmp	.+28     	; 0x1a6 <main+0x68>
 18a:	85 e2       	ldi	r24, 0x25	; 37
 18c:	91 e0       	ldi	r25, 0x01	; 1
 18e:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <UART_write_txt>
 192:	88 e4       	ldi	r24, 0x48	; 72
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <UART_write>
 19a:	8a e0       	ldi	r24, 0x0A	; 10
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <UART_write>
 1a2:	88 e4       	ldi	r24, 0x48	; 72
 1a4:	03 c0       	rjmp	.+6      	; 0x1ac <main+0x6e>
 1a6:	81 30       	cpi	r24, 0x01	; 1
 1a8:	49 f4       	brne	.+18     	; 0x1bc <main+0x7e>
 1aa:	8f e4       	ldi	r24, 0x4F	; 79
 1ac:	0e 94 6a 00 	call	0xd4	; 0xd4 <SPI_tx>
 1b0:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <cont>
 1b4:	8f 5f       	subi	r24, 0xFF	; 255
 1b6:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <cont>
 1ba:	11 c0       	rjmp	.+34     	; 0x1de <main+0xa0>
 1bc:	82 30       	cpi	r24, 0x02	; 2
 1be:	11 f4       	brne	.+4      	; 0x1c4 <main+0x86>
 1c0:	8c e4       	ldi	r24, 0x4C	; 76
 1c2:	f4 cf       	rjmp	.-24     	; 0x1ac <main+0x6e>
 1c4:	83 30       	cpi	r24, 0x03	; 3
 1c6:	59 f4       	brne	.+22     	; 0x1de <main+0xa0>
 1c8:	81 e4       	ldi	r24, 0x41	; 65
 1ca:	0e 94 6a 00 	call	0xd4	; 0xd4 <SPI_tx>
 1ce:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <cont>
 1d2:	05 c0       	rjmp	.+10     	; 0x1de <main+0xa0>
 1d4:	82 30       	cpi	r24, 0x02	; 2
 1d6:	19 f4       	brne	.+6      	; 0x1de <main+0xa0>
 1d8:	81 ef       	ldi	r24, 0xF1	; 241
 1da:	0e 94 6a 00 	call	0xd4	; 0xd4 <SPI_tx>
 1de:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <__data_end>
 1e2:	b7 cf       	rjmp	.-146    	; 0x152 <main+0x14>

000001e4 <UART_write>:
 1e4:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 1e8:	95 ff       	sbrs	r25, 5
 1ea:	fc cf       	rjmp	.-8      	; 0x1e4 <UART_write>
 1ec:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 1f0:	08 95       	ret

000001f2 <UART_write_txt>:
 1f2:	cf 93       	push	r28
 1f4:	df 93       	push	r29
 1f6:	ec 01       	movw	r28, r24
 1f8:	89 91       	ld	r24, Y+
 1fa:	88 23       	and	r24, r24
 1fc:	19 f0       	breq	.+6      	; 0x204 <UART_write_txt+0x12>
 1fe:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <UART_write>
 202:	fa cf       	rjmp	.-12     	; 0x1f8 <UART_write_txt+0x6>
 204:	df 91       	pop	r29
 206:	cf 91       	pop	r28
 208:	08 95       	ret

0000020a <_exit>:
 20a:	f8 94       	cli

0000020c <__stop_program>:
 20c:	ff cf       	rjmp	.-2      	; 0x20c <__stop_program>
=======
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a1 30       	cpi	r26, 0x01	; 1
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 7e 00 	call	0xfc	; 0xfc <main>
  88:	0c 94 9f 00 	jmp	0x13e	; 0x13e <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <SPI_init>:
  90:	23 98       	cbi	0x04, 3	; 4
  92:	24 9a       	sbi	0x04, 4	; 4
  94:	22 98       	cbi	0x04, 2	; 4
  96:	2a 9a       	sbi	0x05, 2	; 5
  98:	8c b5       	in	r24, 0x2c	; 44
  9a:	8f 7d       	andi	r24, 0xDF	; 223
  9c:	8c bd       	out	0x2c, r24	; 44
  9e:	8c b5       	in	r24, 0x2c	; 44
  a0:	87 7f       	andi	r24, 0xF7	; 247
  a2:	8c bd       	out	0x2c, r24	; 44
  a4:	8c b5       	in	r24, 0x2c	; 44
  a6:	8b 7f       	andi	r24, 0xFB	; 251
  a8:	8c bd       	out	0x2c, r24	; 44
  aa:	8c b5       	in	r24, 0x2c	; 44
  ac:	81 60       	ori	r24, 0x01	; 1
  ae:	8c bd       	out	0x2c, r24	; 44
  b0:	8c b5       	in	r24, 0x2c	; 44
  b2:	8d 7f       	andi	r24, 0xFD	; 253
  b4:	8c bd       	out	0x2c, r24	; 44
  b6:	8d b5       	in	r24, 0x2d	; 45
  b8:	8e 7f       	andi	r24, 0xFE	; 254
  ba:	8d bd       	out	0x2d, r24	; 45
  bc:	8c b5       	in	r24, 0x2c	; 44
  be:	8f 7e       	andi	r24, 0xEF	; 239
  c0:	8c bd       	out	0x2c, r24	; 44
  c2:	8c b5       	in	r24, 0x2c	; 44
  c4:	80 68       	ori	r24, 0x80	; 128
  c6:	8c bd       	out	0x2c, r24	; 44
  c8:	8c b5       	in	r24, 0x2c	; 44
  ca:	80 64       	ori	r24, 0x40	; 64
  cc:	8c bd       	out	0x2c, r24	; 44
  ce:	08 95       	ret

000000d0 <SPI_tx>:
  d0:	8e bd       	out	0x2e, r24	; 46
  d2:	0d b4       	in	r0, 0x2d	; 45
  d4:	07 fe       	sbrs	r0, 7
  d6:	fd cf       	rjmp	.-6      	; 0xd2 <SPI_tx+0x2>
  d8:	08 95       	ret

000000da <__vector_17>:
  da:	1f 92       	push	r1
  dc:	0f 92       	push	r0
  de:	0f b6       	in	r0, 0x3f	; 63
  e0:	0f 92       	push	r0
  e2:	11 24       	eor	r1, r1
  e4:	8f 93       	push	r24
  e6:	8e b5       	in	r24, 0x2e	; 46
  e8:	81 30       	cpi	r24, 0x01	; 1
  ea:	11 f4       	brne	.+4      	; 0xf0 <__vector_17+0x16>
  ec:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
  f0:	8f 91       	pop	r24
  f2:	0f 90       	pop	r0
  f4:	0f be       	out	0x3f, r0	; 63
  f6:	0f 90       	pop	r0
  f8:	1f 90       	pop	r1
  fa:	18 95       	reti

000000fc <main>:
  fc:	f8 94       	cli
  fe:	0e 94 48 00 	call	0x90	; 0x90 <SPI_init>
 102:	78 94       	sei
 104:	8f e3       	ldi	r24, 0x3F	; 63
 106:	9c e9       	ldi	r25, 0x9C	; 156
 108:	01 97       	sbiw	r24, 0x01	; 1
 10a:	f1 f7       	brne	.-4      	; 0x108 <main+0xc>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <main+0x12>
 10e:	00 00       	nop
 110:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 114:	81 30       	cpi	r24, 0x01	; 1
 116:	59 f4       	brne	.+22     	; 0x12e <main+0x32>
 118:	88 e4       	ldi	r24, 0x48	; 72
 11a:	0e 94 68 00 	call	0xd0	; 0xd0 <SPI_tx>
 11e:	8f e4       	ldi	r24, 0x4F	; 79
 120:	0e 94 68 00 	call	0xd0	; 0xd0 <SPI_tx>
 124:	8c e4       	ldi	r24, 0x4C	; 76
 126:	0e 94 68 00 	call	0xd0	; 0xd0 <SPI_tx>
 12a:	81 e4       	ldi	r24, 0x41	; 65
 12c:	03 c0       	rjmp	.+6      	; 0x134 <main+0x38>
 12e:	82 30       	cpi	r24, 0x02	; 2
 130:	79 f7       	brne	.-34     	; 0x110 <main+0x14>
 132:	81 ef       	ldi	r24, 0xF1	; 241
 134:	0e 94 68 00 	call	0xd0	; 0xd0 <SPI_tx>
 138:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
 13c:	e9 cf       	rjmp	.-46     	; 0x110 <main+0x14>

0000013e <_exit>:
 13e:	f8 94       	cli

00000140 <__stop_program>:
 140:	ff cf       	rjmp	.-2      	; 0x140 <__stop_program>
>>>>>>> a480e008b884e89538d8bf8699e927791b75daf3
