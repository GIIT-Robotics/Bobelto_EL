
SPI_M_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000024c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001d8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  0000024c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000024c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000027c  2**2
                  CONTENTS, READONLY
  5 .debug_info   000005f4  00000000  00000000  000002bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005a2  00000000  00000000  000008b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000134  00000000  00000000  00000e52  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000208  00000000  00000000  00000f86  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 48 00 	jmp	0x90	; 0x90 <__vector_18>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 30       	cpi	r26, 0x02	; 2
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 71 00 	call	0xe2	; 0xe2 <main>
  88:	0c 94 ea 00 	jmp	0x1d4	; 0x1d4 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <__vector_18>:
  90:	1f 92       	push	r1
  92:	0f 92       	push	r0
  94:	0f b6       	in	r0, 0x3f	; 63
  96:	0f 92       	push	r0
  98:	11 24       	eor	r1, r1
  9a:	2f 93       	push	r18
  9c:	3f 93       	push	r19
  9e:	4f 93       	push	r20
  a0:	5f 93       	push	r21
  a2:	6f 93       	push	r22
  a4:	7f 93       	push	r23
  a6:	8f 93       	push	r24
  a8:	9f 93       	push	r25
  aa:	af 93       	push	r26
  ac:	bf 93       	push	r27
  ae:	ef 93       	push	r30
  b0:	ff 93       	push	r31
  b2:	0e 94 da 00 	call	0x1b4	; 0x1b4 <UART_read>
  b6:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <UART_BUFF>
  ba:	81 e0       	ldi	r24, 0x01	; 1
  bc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
  c0:	ff 91       	pop	r31
  c2:	ef 91       	pop	r30
  c4:	bf 91       	pop	r27
  c6:	af 91       	pop	r26
  c8:	9f 91       	pop	r25
  ca:	8f 91       	pop	r24
  cc:	7f 91       	pop	r23
  ce:	6f 91       	pop	r22
  d0:	5f 91       	pop	r21
  d2:	4f 91       	pop	r20
  d4:	3f 91       	pop	r19
  d6:	2f 91       	pop	r18
  d8:	0f 90       	pop	r0
  da:	0f be       	out	0x3f, r0	; 63
  dc:	0f 90       	pop	r0
  de:	1f 90       	pop	r1
  e0:	18 95       	reti

000000e2 <main>:
  e2:	f8 94       	cli
  e4:	0e 94 95 00 	call	0x12a	; 0x12a <SPI_init>
  e8:	0e 94 c9 00 	call	0x192	; 0x192 <UART_init>
  ec:	78 94       	sei
  ee:	8f e3       	ldi	r24, 0x3F	; 63
  f0:	9c e9       	ldi	r25, 0x9C	; 156
  f2:	01 97       	sbiw	r24, 0x01	; 1
  f4:	f1 f7       	brne	.-4      	; 0xf2 <main+0x10>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0x16>
  f8:	00 00       	nop
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	0e 94 c1 00 	call	0x182	; 0x182 <SPI_slaveON>
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	0e 94 c3 00 	call	0x186	; 0x186 <SPI_trans>
 106:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <UART_write>
 10a:	8a e0       	ldi	r24, 0x0A	; 10
 10c:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <UART_write>
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	0e 94 b8 00 	call	0x170	; 0x170 <SPI_slaveOFF>
 116:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <UART_BUFF>
 11a:	9f ef       	ldi	r25, 0xFF	; 255
 11c:	23 ed       	ldi	r18, 0xD3	; 211
 11e:	80 e3       	ldi	r24, 0x30	; 48
 120:	91 50       	subi	r25, 0x01	; 1
 122:	20 40       	sbci	r18, 0x00	; 0
 124:	80 40       	sbci	r24, 0x00	; 0
 126:	e1 f7       	brne	.-8      	; 0x120 <main+0x3e>
 128:	e6 cf       	rjmp	.-52     	; 0xf6 <main+0x14>

0000012a <SPI_init>:
 12a:	84 b1       	in	r24, 0x04	; 4
 12c:	88 62       	ori	r24, 0x28	; 40
 12e:	84 b9       	out	0x04, r24	; 4
 130:	24 98       	cbi	0x04, 4	; 4
 132:	84 b1       	in	r24, 0x04	; 4
 134:	86 60       	ori	r24, 0x06	; 6
 136:	84 b9       	out	0x04, r24	; 4
 138:	85 b1       	in	r24, 0x05	; 5
 13a:	86 60       	ori	r24, 0x06	; 6
 13c:	85 b9       	out	0x05, r24	; 5
 13e:	8c b5       	in	r24, 0x2c	; 44
 140:	8f 7d       	andi	r24, 0xDF	; 223
 142:	8c bd       	out	0x2c, r24	; 44
 144:	8c b5       	in	r24, 0x2c	; 44
 146:	87 7f       	andi	r24, 0xF7	; 247
 148:	8c bd       	out	0x2c, r24	; 44
 14a:	8c b5       	in	r24, 0x2c	; 44
 14c:	8b 7f       	andi	r24, 0xFB	; 251
 14e:	8c bd       	out	0x2c, r24	; 44
 150:	8c b5       	in	r24, 0x2c	; 44
 152:	81 60       	ori	r24, 0x01	; 1
 154:	8c bd       	out	0x2c, r24	; 44
 156:	8c b5       	in	r24, 0x2c	; 44
 158:	8d 7f       	andi	r24, 0xFD	; 253
 15a:	8c bd       	out	0x2c, r24	; 44
 15c:	8d b5       	in	r24, 0x2d	; 45
 15e:	8e 7f       	andi	r24, 0xFE	; 254
 160:	8d bd       	out	0x2d, r24	; 45
 162:	8c b5       	in	r24, 0x2c	; 44
 164:	80 61       	ori	r24, 0x10	; 16
 166:	8c bd       	out	0x2c, r24	; 44
 168:	8c b5       	in	r24, 0x2c	; 44
 16a:	80 64       	ori	r24, 0x40	; 64
 16c:	8c bd       	out	0x2c, r24	; 44
 16e:	08 95       	ret

00000170 <SPI_slaveOFF>:
 170:	81 30       	cpi	r24, 0x01	; 1
 172:	19 f0       	breq	.+6      	; 0x17a <SPI_slaveOFF+0xa>
 174:	82 30       	cpi	r24, 0x02	; 2
 176:	19 f0       	breq	.+6      	; 0x17e <SPI_slaveOFF+0xe>
 178:	08 95       	ret
 17a:	29 98       	cbi	0x05, 1	; 5
 17c:	08 95       	ret
 17e:	2a 98       	cbi	0x05, 2	; 5
 180:	08 95       	ret

00000182 <SPI_slaveON>:
 182:	0c 94 b8 00 	jmp	0x170	; 0x170 <SPI_slaveOFF>

00000186 <SPI_trans>:
 186:	8e bd       	out	0x2e, r24	; 46
 188:	0d b4       	in	r0, 0x2d	; 45
 18a:	07 fe       	sbrs	r0, 7
 18c:	fd cf       	rjmp	.-6      	; 0x188 <SPI_trans+0x2>
 18e:	8e b5       	in	r24, 0x2e	; 46
 190:	08 95       	ret

00000192 <UART_init>:
 192:	51 9a       	sbi	0x0a, 1	; 10
 194:	50 98       	cbi	0x0a, 0	; 10
 196:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 19a:	88 e9       	ldi	r24, 0x98	; 152
 19c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 1a0:	86 e0       	ldi	r24, 0x06	; 6
 1a2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 1a6:	87 e6       	ldi	r24, 0x67	; 103
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 1ae:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 1b2:	08 95       	ret

000001b4 <UART_read>:
 1b4:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 1b8:	87 ff       	sbrs	r24, 7
 1ba:	03 c0       	rjmp	.+6      	; 0x1c2 <UART_read+0xe>
 1bc:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 1c0:	08 95       	ret
 1c2:	80 e0       	ldi	r24, 0x00	; 0
 1c4:	08 95       	ret

000001c6 <UART_write>:
 1c6:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 1ca:	95 ff       	sbrs	r25, 5
 1cc:	fc cf       	rjmp	.-8      	; 0x1c6 <UART_write>
 1ce:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 1d2:	08 95       	ret

000001d4 <_exit>:
 1d4:	f8 94       	cli

000001d6 <__stop_program>:
 1d6:	ff cf       	rjmp	.-2      	; 0x1d6 <__stop_program>
